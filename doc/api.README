#
# $Id: api.README,v f112d1865eab 2009/09/11 16:26:32 nieves $
#

NAME
	tclmetar -

	Tcl procedures to decode Metar reports.

SYNOPSIS

	package require metar;

	::metar::decode {line}
	::metar::get_param {param_name}
	::metar::get_flag {flag_name}
	::metar::get_textitem {item_name}
	::metar::get_param_list {}
	::metar::get_flag_list {}
	::metar::get_textitem_list {}

	::metar::get_var_list {}
	::metar::get_var {var_name}
	::metar::set_var {var_name var_value}

DESCRIPTION

	This package provides a set of Tcl procedures that can be used
	to decode Metar reports from Tcl scripts.

proc metar::decode <line>

	Decodes the various parts of a metar report and sets the
	corresponding variables; e.g.

	metar::decode {METAR KLAF 021915Z COR 22010KT 7SM TSRA BKN055
			30/17 A2974 RMK T W MOVG NE}

	In each metar::decode call, all the parameters and flags are first
	cleared and then updated with the new values. Parameters that are
	not present in the report are set to the empty string "".

proc metar::get_param <param>

	The function returns the value of the parameter name passed
	in the argument; for example

	metar::get_param_val "wind.speed_kt"
	metar::get_param_val "wind.dir"

proc metar::get_param_list {}

	This function returns the (tcl) list of parameter names:

	    alt
	    auto_stationtype
	    date.dd
	    date.hhmm
	    dewp_01_c
	    dewp_01_f
	    dewp_c
	    dewp_f
	    hourlyprecip
	    sky
	    slp
	    station
	    temp_01_c
	    temp_01_f
	    temp_c
	    temp_f
	    type
	    visibility
	    weather
	    weatherlog
	    wind.dir
	    wind.gust_kt
	    wind.gust_mph
	    wind.speed_kt
	    wind.speed_mph

proc metar::get_flag <flag>

	The function returns the value of the flag name passed
	in the argument; for example

	metar::get_flag_val "wind_calm"
	metar::get_falag_val "visibility_Mflag"

proc metar::get_flag_list {}

	This function returns the (tcl) list of flag names:

	    alt_Q
	    hourlyprecip_0
	    presfr
	    presrr
	    slpno
	    snoincr
	    visibility_Mflag
	    wind_calm

proc metar::get_textitem <item>

	The function returns the value of the flag name passed
	in the argument; for example

	metar::get_textitem "wind_calm"
	metar::get_textitem ""weather.PE"

	returns "Calm" and "ice crystals", respectively.

proc metar::get_textitem_list {}

	This function returns the (tcl) list of textitem names:

	    hourlyprecip_0
	    presfr
	    presrr
	    report_types.metar
	    report_types.speci
	    report_types.unknown
	    sky.coverage.BKN
	    sky.coverage.CAVOK
	    sky.coverage.CLR
	    sky.coverage.FEW
	    sky.coverage.OVC
	    sky.coverage.SCT
	    sky.coverage.SKC
	    sky.type.CB
	    sky.type.CI
	    sky.type.CU
	    sky.type.TCU
	    slpno
	    snoincr
	    visibility_Mflag
	    weather.BC
	    weather.BL
	    weather.BR
	    weather.DR
	    weather.DS
	    weather.DU
	    weather.DZ
	    weather.FC
	    weather.FG
	    weather.FU
	    weather.FZ
	    weather.GR
	    weather.GS
	    weather.HZ
	    weather.IC
	    weather.MI
	    weather.PE
	    weather.PI
	    weather.PO
	    weather.PY
	    weather.RA
	    weather.SA
	    weather.SG
	    weather.SH
	    weather.SN
	    weather.SQ
	    weather.SS
	    weather.TS
	    weather.UP
	    weather.VA
	    weather.intensity.VC
	    weather.intensity.blank
	    weather.intensity.minus
	    weather.intensity.plus
	    wind_calm
	    wind_dir_variable

proc ::metar::set_var {var_name var_value}

	This function allows the user to define variables and place
	them under the control of the library for easy reference. Nothing
	is defined by default. It can be used, for example, to store
	the results of derived variables, such as humidity:

	::metar::set_var "humidity" $humidity_value;
	
	
proc ::metar::get_var_list {}

	This function returns a (tcl) list of the variables defined as above.

proc ::metar::get_var {var_name}

	Returns the value of the variable with the name given in the argment.
-
